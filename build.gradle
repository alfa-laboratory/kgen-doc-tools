buildscript {
    ext {
        kotlinVersion = '1.2.21'
        junitVersion = '5.0.3'
    }
    repositories {
        mavenLocal()
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion")
        classpath("org.junit.platform:junit-platform-gradle-plugin:1.0.1")
    }
}

group = 'ru.alfabank.ecomm'
version = "0.0.1"

allprojects {
    apply plugin: 'jacoco'

    repositories {
        mavenLocal()
        jcenter()
    }
}

subprojects {
    apply plugin: 'kotlin'
    apply plugin: "org.junit.platform.gradle.plugin"

    dependencies {
        compile("org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlinVersion")

        testCompile("com.nhaarman:mockito-kotlin-kt1.1:1.5.0")
        testCompile("org.junit.jupiter:junit-jupiter-api:$junitVersion")
        testRuntime("org.junit.jupiter:junit-jupiter-engine:$junitVersion")
    }

    compileKotlin {
        kotlinOptions.jvmTarget = "1.8"
    }

    compileTestKotlin {
        kotlinOptions.jvmTarget = "1.8"
    }

    def junitPlatformTestTask = (JavaExec) project.tasks.getByName('junitPlatformTest')

    jacoco {
        applyTo(junitPlatformTestTask)
    }

    task jacocoJupTestReport(type: JacocoReport) {
        executionData(junitPlatformTestTask)
        sourceSets(sourceSets.main)
        sourceDirectories = files(sourceSets.main.allSource.srcDirs)
        classDirectories = files(sourceSets.main.output)

        reports {
            xml.enabled true
            xml.destination file("${buildDir}/reports/jacoco/report.xml")
            html.enabled false
            csv.enabled false
        }
    }

    check.dependsOn jacocoJupTestReport
    jacocoJupTestReport.dependsOn test
}